#!/usr/bin/env ruby

require 'pry'
require 'configparser'
require 'date'
require "bundler/setup"
require 'harvest'
require 'active_support/core_ext/date/calculations'

configfile = File.expand_path('~/.config/start-harvest.conf')
config = ConfigParser.new(configfile).map { |k, v| [k, convert_to_sym(v)] }.to_h
harvest = Harvest::Client.new(**config['harvest'])

puts "Active user is #{harvest.active_user.first_name} #{harvest.active_user.last_name}"

if harvest.active_user.is_admin
  puts "User is Admin"
else
  puts "User is not an Admin"
end

# project_assignments = harvest.project_assignments

# harvest
#   .projects
#   .select { |project| project if project.project[:name] == 'Intellaegis - Managed' }
#   .tasks.select { |ta| ta if ta.task.name == 'Teams' }
#   .time_entry
#   .create(
#     **{
#       spent_date: Date.today.to_s,
#       notes: 'Testing'
#       # external_reference: { id: task.id, group_id: task.project.id, permalink: @jira.html_jira_link(task.key) }
#     }
#   )

# @api private
def today
  beginning_of_day
end

def beginning_of_day
  DateTime.now.beginning_of_day
end

def beginning_of_day_epoch
  beginning_of_day.to_i
end

def yesterday_beginning_of_day
  Date.today.yesterday.to_datetime
end

# harvest_time_entry = harvest.time_entry.discover(from: Date.today.yesterday.to_s)
# today_te = harvest_time_entry.select {|te| te.created_at > today }
# yesterday_te = harvest_time_entry.select {|te| te.created_at > yesterday_beginning_of_day && te.created_at < today }

binding.pry
